"use strict";(self.webpackChunkpets=self.webpackChunkpets||[]).push([[700],{9700:(t,e,r)=>{r.r(e),r.d(e,{ScreenOrientationWeb:()=>i});var n=r(6653),s=r(7854);class i extends n.Uw{constructor(){super(),this.isSupported="orientation"in screen,this.handleOrientationChange=async()=>{const t={type:(await this.getCurrentOrientation()).type};this.notifyListeners("screenOrientationChange",t)},this.isSupported&&screen.orientation.addEventListener("change",this.handleOrientationChange)}async lock(t){this.isSupported||this.throwUnsupportedError(),await screen.orientation.lock(t.type)}async unlock(){this.isSupported||this.throwUnsupportedError(),screen.orientation.unlock()}async getCurrentOrientation(){switch(this.isSupported||this.throwUnsupportedError(),screen.orientation.type){case"landscape-primary":return{type:s.F.LANDSCAPE_PRIMARY};case"landscape-secondary":return{type:s.F.LANDSCAPE_SECONDARY};case"portrait-secondary":return{type:s.F.PORTRAIT_SECONDARY};default:return{type:s.F.PORTRAIT_PRIMARY}}}throwUnsupportedError(){throw this.unavailable("Screen Orientation API not available in this browser.")}}}}]);
//# sourceMappingURL=700.29c5cbdb.chunk.js.map